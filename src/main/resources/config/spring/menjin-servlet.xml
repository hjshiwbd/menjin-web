<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 解决@ResponseBody中文乱码,必须放在<mvc:annotation-driven />之前 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
	<mvc:annotation-driven />
	<!-- 静态资源文件 -->
	<mvc:default-servlet-handler />

	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="org.shinomin" />

	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 自定义multipartUpload.继承自org.springframework.web.multipart.commons.CommonsMultipartResolver -->
	<!-- <bean id="multipartResolver" class="com.synjones.base.servlet.MultipartResolver"> -->
	<!-- one of the properties available; the maximum file size in bytes -->
	<!-- <property name="maxUploadSize" value="100000"/> -->
	<!--</bean> -->

	<!--拦截器 -->
	<mvc:interceptors>
		<!-- login interceptor -->
		<mvc:interceptor>
			<mvc:mapping path="/**/*.html" />
			<bean class="org.shinomin.menjin.interceptor.LoginInterceptor">
				<property name="doNotIntercept">
					<list>
						<value><![CDATA[LoginController.login]]></value>
						<value><![CDATA[LoginController.doLogin]]></value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<!-- access interceptor -->
		<mvc:interceptor>
			<mvc:mapping path="/**/*.html" />
			<bean class="org.shinomin.menjin.interceptor.MenuInterceptor">
				<property name="doNotIntercept">
					<list>
						<value><![CDATA[MiscpageController.left]]></value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
		<!-- accesslog interceptor -->
		<mvc:interceptor>
			<mvc:mapping path="/**/*.html" />
			<bean class="org.shinomin.menjin.interceptor.AccessLogInterceptor">
				<property name="notWriteLogCutpoint">
					<list>
						<value><![CDATA[MiscpageController.*]]></value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>